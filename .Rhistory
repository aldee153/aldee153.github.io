labs(title = "P-Value of Success by Day",
subtitle = "With 0.05 Threshold") +
theme_fivethirtyeight()
test_elimination %>%
rename(`Pre-Elimination` = `What was the dog doing pre-elimination? (nap, meal, walk, play, sniffing, pacing, etc.)`) %>%
ggplot(aes(mean_success, n, color = `Pre-Elimination`)) +
geom_point() +
geom_errorbarh(aes(xmin = lower.ci, xmax = upper.ci)) +
theme_bw()
potty_records %>%
group_by(Date, `Potty break or in-house accident?`) %>%
summarise(n = n()) %>%
na.omit() %>%
ggplot(aes(`Potty break or in-house accident?`, n)) +
geom_boxplot(aes(fill = factor(`Potty break or in-house accident?`))) +
theme_bw() +
labs(title = "Potty break or in-house accident?",
x = "",
y = "") +
guides(fill = guide_legend(title = "Type"))
library(tidyverse)
library(lubridate)
library(ggthemes)
library(modelr)
library(broom)
library(caret)
library(tidytext)
library(lime)
library(ggridges)
library(viridis)
potty_records <- read_csv("C:/Users/dell/Desktop/Aimee/potty_records.csv") %>%
mutate(Date = mdy(Date), day_of_week = wday(Date, label = TRUE))
potty_records$hour <- as.POSIXlt(potty_records$Time, format="%H:%M")$hour
potty_records %>%
rename(type = `Potty break or in-house accident?`) %>%
group_by(Date, type) %>%
summarise(n = n()) %>%
mutate(freq = n/sum(n)) %>%
ggplot(aes(Date, freq, color = type)) +
geom_line(size = 1) +
labs(title = "Time Series of Bathroom Type",
subtitle = "by % of Success or Accident") +
theme_fivethirtyeight()
potty_records <- read_csv("C:/Users/dell/Desktop/Aimee/potty_records.csv") %>%
mutate(Date = mdy(Date), day_of_week = wday(Date, label = TRUE))
potty_records$hour <- as.POSIXlt(potty_records$Time, format="%H:%M")$hour
potty_records %>%
rename(type = `Potty break or in-house accident?`) %>%
group_by(Date, type) %>%
summarise(n = n()) %>%
mutate(freq = n/sum(n)) %>%
ggplot(aes(Date, freq, color = type)) +
geom_line(size = 1) +
labs(title = "Time Series of Bathroom Type",
subtitle = "by % of Success or Accident") +
theme_fivethirtyeight()
library(tidyverse)
library(lubridate)
library(ggthemes)
library(modelr)
library(broom)
library(caret)
library(tidytext)
library(lime)
library(ggridges)
library(viridis)
potty_records <- read_csv("C:/Users/dell/Desktop/Aimee/potty_records.csv") %>%
mutate(Date = mdy(Date), day_of_week = wday(Date, label = TRUE))
potty_records$hour <- as.POSIXlt(potty_records$Time, format="%H:%M")$hour
potty_records %>%
rename(type = `Potty break or in-house accident?`) %>%
group_by(Date, type) %>%
summarise(n = n()) %>%
mutate(freq = n/sum(n)) %>%
ggplot(aes(Date, freq, color = type)) +
geom_line(size = 1) +
labs(title = "Time Series of Bathroom Type",
subtitle = "by % of Success or Accident") +
theme_fivethirtyeight()
potty_records %>%
group_by(Date, `Potty break or in-house accident?`) %>%
summarise(n = n()) %>%
na.omit() %>%
ggplot(aes(`Potty break or in-house accident?`, n)) +
geom_boxplot(aes(fill = factor(`Potty break or in-house accident?`))) +
theme_bw() +
labs(title = "Potty break or in-house accident?",
x = "",
y = "") +
guides(fill = guide_legend(title = "Type"))
potty_records_model <- potty_records %>%
select(-Notes, -`Time`, -Date) %>%
mutate(`Potty break or in-house accident?` = as.factor(`Potty break or in-house accident?`),
`U(rination), D(efecation), N(either), B(oth)` = as.factor(`U(rination), D(efecation), N(either), B(oth)`),
`What was the dog doing pre-elimination? (nap, meal, walk, play, sniffing, pacing, etc.)` = as.factor(`What was the dog doing pre-elimination? (nap, meal, walk, play, sniffing, pacing, etc.)`), `Consequences for the dog (play, treat, walk, scolding, clean up/no response?)` = as.factor(`Consequences for the dog (play, treat, walk, scolding, clean up/no response?)`)) %>%
na.omit()
potty_records_model <- potty_records_model %>%
rename(type = `U(rination), D(efecation), N(either), B(oth)`, action_before = `What was the dog doing pre-elimination? (nap, meal, walk, play, sniffing, pacing, etc.)`, Consequences = `Consequences for the dog (play, treat, walk, scolding, clean up/no response?)`)
# Replace NAs w/ 0s
potty_records_model <- potty_records_model %>%
mutate_if(is.numeric, funs(replace(., is.na(.), 0)))
test <- potty_records %>%
mutate(Success = case_when(`Potty break or in-house accident?` == 'Success' ~ 1,
`Potty break or in-house accident?` == 'Accident' ~ 0))
test_mean <- test %>%
summarise(n = n(),
mean_success = mean(Success, na.rm = TRUE),
std_error = sd(Success, na.rm = TRUE) / sqrt(n),
sd = sd(Success, na.rm = TRUE),
lower.ci = mean_success - qt(1 - (0.05/2), n - 1) * std_error,
upper.ci = mean_success + qt(1 - (0.05/2), n - 1) * std_error)
test_mean
test_type <- test %>%
group_by(`U(rination), D(efecation), N(either), B(oth)`) %>%
summarise(n = n(),
mean_success = mean(Success, na.rm = TRUE),
std_error = sd(Success, na.rm = TRUE) / sqrt(n),
sd = sd(Success, na.rm = TRUE),
lower.ci = mean_success - qt(1 - (0.05/2), n - 1) * std_error,
upper.ci = mean_success + qt(1 - (0.05/2), n - 1) * std_error) %>%
filter(n > 2) %>%
arrange(desc(mean_success))
test_type
test <- test[c(-56, -15), ]
hypothesis <- with(test, t.test(Success == 1, Success == 0))
hypothesis
obs_diff <- hypothesis[["estimate"]][["mean of x"]] - hypothesis[["estimate"]][["mean of y"]]
obs_diff
test_by_day <- test %>%
group_by(Date) %>%
summarise(p_value = t.test(Success == 1, Success == 0)$p.value,
Success = t.test(Success == 1, Success == 0)$estimate[1])
test_by_day %>%
ggplot(aes(Date, p_value)) +
geom_line(size = 1) +
geom_hline(yintercept = 0.05, linetype="dashed", color = "red") +
labs(title = "P-Value of Success by Day",
subtitle = "With 0.05 Threshold") +
theme_fivethirtyeight()
View(test_by_day)
hypothesis2 <- test %>%
group_by(Date) %>%
summarise(hypothesis = with(test, t.test(Success == 1, Success == 0)))
hypothesis2 <- test %>%
group_by(Date) %>%
summarise(hypothesis = t.test(Success == 1, Success == 0)))
hypothesis2 <- test %>%
group_by(Date) %>%
summarise(hypothesis = t.test(Success == 1, Success == 0))
hypothesis2 <- test %>%
group_by(Date) %>%
summarise(hypothesis = t.test(Success == 1, Success == 0)$[["estimate"]][["mean of x"]])
test_by_day <- test %>%
group_by(Date) %>%
summarise(p_value = t.test(Success == 1, Success == 0)$p.value,
Success = t.test(Success == 1, Success == 0)$estimate[2])
test_by_day <- test %>%
group_by(Date) %>%
summarise(p_value = t.test(Success == 1, Success == 0)$p.value,
Success = t.test(Success == 1, Success == 0)$estimate[1])
test_by_day <- test %>%
group_by(Date) %>%
summarise(p_value = t.test(Success == 1, Success == 0)$p.value,
Success = t.test(Success == 1, Success == 0)$estimate[1],
Accident = t.test(Success == 1, Success == 0)$estimate[2])
test_by_day <- test %>%
group_by(Date) %>%
summarise(p_value = t.test(Success == 1, Success == 0)$p.value,
Success = t.test(Success == 1, Success == 0)$estimate[1])
hypothesis2 <- test %>%
group_by(Date) %>%
summarise(Accident = t.test(Success == 1, Success == 0)$estimate[2])
View(hypothesis2)
test_by_day2 <- test %>%
group_by(Date) %>%
summarise(Accident = t.test(Success == 1, Success == 0)$estimate[2])
test_by_day %>%
ggplot(aes(Date, p_value)) +
geom_line(size = 1) +
geom_hline(yintercept = 0.05, linetype="dashed", color = "red") +
labs(title = "P-Value of Success by Day",
subtitle = "With 0.05 Threshold") +
theme_fivethirtyeight()
test_by_day3 <- inner_join(test_by_day, test_by_day2, by = "Date")
View(test_type)
View(test_by_day3)
test_by_day3 <- inner_join(test_by_day, test_by_day2, by = "Date") %>%
mutate(effect = (Success - Effect))
test_by_day3 <- inner_join(test_by_day, test_by_day2, by = "Date") %>%
mutate(effect = (Success - Accident))
test_by_day %>%
ggplot(aes(Date, effect)) +
geom_line(size = 1) +
geom_hline(yintercept = 0.00, linetype="dashed", color = "red") +
labs(title = "P-Value of Success by Day",
subtitle = "With 0.05 Threshold") +
theme_fivethirtyeight()
test_by_day3 %>%
ggplot(aes(Date, effect)) +
geom_line(size = 1) +
geom_hline(yintercept = 0.00, linetype="dashed", color = "red") +
labs(title = "P-Value of Success by Day",
subtitle = "With 0.05 Threshold") +
theme_fivethirtyeight()
test_by_day3 %>%
ggplot(aes(Date, effect)) +
geom_line(size = 1) +
geom_hline(yintercept = 0.00, linetype="dashed", color = "red") +
labs(title = "Treatment Effect",
subtitle = "By Date") +
theme_fivethirtyeight()
test_by_day3 %>%
ggplot(aes(Date, effect)) +
geom_line(size = 1) +
geom_hline(yintercept = 0.00, linetype="dashed", color = "red") +
labs(title = "Success Effect",
subtitle = "By Date") +
theme_fivethirtyeight()
test_by_day3 %>%
ggplot(aes(Date, effect)) +
geom_line(size = 1) +
geom_hline(yintercept = 0.00, linetype="dashed", color = "red") +
labs(title = "Effect Size of Success By Date",
subtitle = "By Date") +
theme_fivethirtyeight()
test_by_day3 %>%
ggplot(aes(Date, effect)) +
geom_line(size = 1) +
geom_hline(yintercept = 0.00, linetype="dashed", color = "red") +
labs(title = "Effect Size of Success By Date")
test_by_day3 %>%
ggplot(aes(Date, effect)) +
geom_line(size = 1) +
geom_hline(yintercept = 0.00, linetype="dashed", color = "red") +
labs(title = "Effect Size of Success By Date") +
theme_fivethirtyeight()
test_by_day %>%
ggplot(aes(Date, p_value)) +
geom_line(size = 1) +
geom_hline(yintercept = 0.05, linetype="dashed", color = "red") +
labs(title = "P-Value of Success by Day",
subtitle = "With 0.05 Threshold") +
theme_fivethirtyeight()
View(test)
test_by_day1 <- test %>%
group_by(Date, `U(rination), D(efecation), N(either), B(oth)`) %>%
summarise(p_value = t.test(Success == 1, Success == 0)$p.value,
Success = t.test(Success == 1, Success == 0)$estimate[1])
test_by_day2 <- test %>%
group_by(Date, `U(rination), D(efecation), N(either), B(oth)`) %>%
summarise(Accident = t.test(Success == 1, Success == 0)$estimate[2])
test_by_day1 <- test %>%
group_by(Date, day_of_week) %>%
summarise(p_value = t.test(Success == 1, Success == 0)$p.value,
Success = t.test(Success == 1, Success == 0)$estimate[1])
test_by_day2 <- test %>%
group_by(Date, day_of_week) %>%
summarise(Accident = t.test(Success == 1, Success == 0)$estimate[2])
test_by_day3 <- inner_join(test_by_day1, test_by_day2, by = "Date") %>%
mutate(effect = (Success - Accident))
test_by_day3 %>%
ggplot(aes(Date, effect)) +
geom_line(size = 1) +
geom_hline(yintercept = 0.00, linetype="dashed", color = "red") +
labs(title = "Effect Size of Success By Date") +
theme_fivethirtyeight()
test_by_day3 <- inner_join(test_by_day1, test_by_day2, by = c("Date", "day_of_week") %>%
test_by_day3 %>%
ggplot(aes(Date, effect), color = day_of) +
geom_line(size = 1) +
geom_hline(yintercept = 0.00, linetype="dashed", color = "red") +
labs(title = "Effect Size of Success By Date") +
theme_fivethirtyeight()
test_by_day3 %>%
test_by_day3 %>%
ggplot(aes(Date, effect), color = day_of_week)) +
test_by_day3 %>%
ggplot(aes(Date, effect), color = day_of_week.x)) +
test_by_day3 %>%
ggplot(aes(Date, effect), color = day_of_week.x)) +
test_by_day3 %>%
ggplot(aes(Date, effect), color = day_of_week.x) +
geom_line(size = 1) +
geom_hline(yintercept = 0.00, linetype="dashed", color = "red") +
labs(title = "Effect Size of Success By Date") +
theme_fivethirtyeight()
test_by_day3 %>%
ggplot(aes(Date, effect), fill = day_of_week.x) +
geom_line(size = 1) +
geom_hline(yintercept = 0.00, linetype="dashed", color = "red") +
labs(title = "Effect Size of Success By Date") +
theme_fivethirtyeight()
test_by_day1 <- test %>%
group_by(day_of_week) %>%
summarise(p_value = t.test(Success == 1, Success == 0)$p.value,
Success = t.test(Success == 1, Success == 0)$estimate[1])
test_by_day2 <- test %>%
group_by(day_of_week) %>%
summarise(Accident = t.test(Success == 1, Success == 0)$estimate[2])
test_by_day3 <- inner_join(test_by_day1, test_by_day2, by = "day_of_week") %>%
mutate(effect = (Success - Accident))
library(tidyverse)
library(lubridate)
library(ggthemes)
library(modelr)
library(broom)
library(caret)
library(tidytext)
library(lime)
library(ggridges)
library(viridis)
potty_records <- read_csv("C:/Users/dell/Desktop/Aimee/potty_records.csv") %>%
mutate(Date = mdy(Date), day_of_week = wday(Date, label = TRUE))
potty_records$hour <- as.POSIXlt(potty_records$Time, format="%H:%M")$hour
potty_records %>%
rename(type = `Potty break or in-house accident?`) %>%
group_by(Date, type) %>%
summarise(n = n()) %>%
mutate(freq = n/sum(n)) %>%
ggplot(aes(Date, freq, color = type)) +
geom_line(size = 1) +
labs(title = "Time Series of Bathroom Type",
subtitle = "by % of Success or Accident") +
theme_fivethirtyeight()
potty_records %>%
group_by(Date, `Potty break or in-house accident?`) %>%
summarise(n = n()) %>%
na.omit() %>%
ggplot(aes(`Potty break or in-house accident?`, n)) +
geom_boxplot(aes(fill = factor(`Potty break or in-house accident?`))) +
theme_bw() +
labs(title = "Potty break or in-house accident?",
x = "",
y = "") +
guides(fill = guide_legend(title = "Type"))
potty_records_model <- potty_records %>%
select(-Notes, -`Time`, -Date) %>%
mutate(`Potty break or in-house accident?` = as.factor(`Potty break or in-house accident?`),
`U(rination), D(efecation), N(either), B(oth)` = as.factor(`U(rination), D(efecation), N(either), B(oth)`),
`What was the dog doing pre-elimination? (nap, meal, walk, play, sniffing, pacing, etc.)` = as.factor(`What was the dog doing pre-elimination? (nap, meal, walk, play, sniffing, pacing, etc.)`), `Consequences for the dog (play, treat, walk, scolding, clean up/no response?)` = as.factor(`Consequences for the dog (play, treat, walk, scolding, clean up/no response?)`)) %>%
na.omit()
potty_records_model <- potty_records_model %>%
rename(type = `U(rination), D(efecation), N(either), B(oth)`, action_before = `What was the dog doing pre-elimination? (nap, meal, walk, play, sniffing, pacing, etc.)`, Consequences = `Consequences for the dog (play, treat, walk, scolding, clean up/no response?)`)
# Replace NAs w/ 0s
potty_records_model <- potty_records_model %>%
mutate_if(is.numeric, funs(replace(., is.na(.), 0)))
test <- potty_records %>%
mutate(Success = case_when(`Potty break or in-house accident?` == 'Success' ~ 1,
`Potty break or in-house accident?` == 'Accident' ~ 0))
test_mean <- test %>%
summarise(n = n(),
mean_success = mean(Success, na.rm = TRUE),
std_error = sd(Success, na.rm = TRUE) / sqrt(n),
sd = sd(Success, na.rm = TRUE),
lower.ci = mean_success - qt(1 - (0.05/2), n - 1) * std_error,
upper.ci = mean_success + qt(1 - (0.05/2), n - 1) * std_error)
test_mean
test_elimination <- test %>%
group_by(`What was the dog doing pre-elimination? (nap, meal, walk, play, sniffing, pacing, etc.)`) %>%
summarise(n = n(),
mean_success = mean(Success, na.rm = TRUE),
std_error = sd(Success, na.rm = TRUE) / sqrt(n),
sd = sd(Success, na.rm = TRUE),
lower.ci = mean_success - qt(1 - (0.05/2), n - 1) * std_error,
upper.ci = mean_success + qt(1 - (0.05/2), n - 1) * std_error) %>%
filter(n > 2) %>%
arrange(desc(mean_success))
test_elimination
test_elimination %>%
rename(`Pre-Elimination` = `What was the dog doing pre-elimination? (nap, meal, walk, play, sniffing, pacing, etc.)`) %>%
ggplot(aes(mean_success, n, color = `Pre-Elimination`)) +
geom_point() +
geom_errorbarh(aes(xmin = lower.ci, xmax = upper.ci)) +
theme_bw()
test <- test[c(-56, -15), ]
hypothesis <- with(test, t.test(Success == 1, Success == 0))
hypothesis
obs_diff <- hypothesis[["estimate"]][["mean of x"]] - hypothesis[["estimate"]][["mean of y"]]
obs_diff
View(test)
failures <- test %>%
filter(Success == 0) %>%
pull(N)
failures <- test %>%
filter(Success == 0)
View(failures)
successes <- test %>%
filter(Success == 1)
res <- prop.test(failures$Success, successes$Success + failures$Success)
failures <- test %>%
filter(Success == 0) %>%
pull(Success)
successes <- test %>%
filter(Success == 1) %>%
pull(Success)
res <- prop.test(failures$Success, successes$Success + failures$Success)
res <- prop.test(failures, successes + failures)
test_by_day <- test %>%
group_by(Date) %>%
summarise(p_value = t.test(Success == 1, Success == 0)$p.value,
Success = t.test(Success == 1, Success == 0)$estimate[1])
false_positive_rate <- sum(test_by_day$p.value < .05)/length(test_by_day$p.value)*100
false_positive_rate <- sum(test_by_day$p_value < .05)/length(test_by_day$p_value)*100
false_positive_rate
pvals <- vectorized_prop_test(converted_A, total_A - converted_A,
converted_B, total_B - converted_B)
false_positive_rate <- sum(test_by_day$p_value < .05)
a <- length(test_by_day$p_value)*100
false_positive_rate
test_by_test <- test %>%
summarise(p_value = t.test(Success == 1, Success == 0)$p.value,
Success = t.test(Success == 1, Success == 0)$estimate[1])
View(test_by_test)
false_positive_rate <- sum(test_by_day$p_value < .05)/length(test_by_day$p_value)*100
false_positive_rate <- sum(test_by_test$p_value < .05)/length(test_by_test$p_value)*100
false_positive_rate
View(hypothesis)
confusionMatrix(hypothesis)
confusionMatrix(hypothesis, test)
test_by_day <- test %>%
group_by(Date) %>%
summarise(p_value = t.test(Success == 1, Success == 0)$p.value,
Success = t.test(Success == 1, Success == 0)$estimate[1])
test_by_day %>%
ggplot(aes(Date, p_value)) +
geom_line(size = 1) +
geom_hline(yintercept = 0.05, linetype="dashed", color = "red") +
labs(title = "P-Value of Success by Day",
subtitle = "With 0.05 Threshold") +
theme_fivethirtyeight()
View(test_by_day)
potty_records %>%
rename(type = `Potty break or in-house accident?`) %>%
group_by(Date, type) %>%
summarise(n = n()) %>%
mutate(freq = n/sum(n)) %>%
ggplot(aes(Date, freq, color = type)) +
geom_line(size = 1) +
labs(title = "Time Series of Bathroom Type",
subtitle = "by % of Success or Accident") +
theme_fivethirtyeight()
potty_records %>%
rename(type = `Potty break or in-house accident?`) %>%
group_by(Date, type) %>%
summarise(n = n()) %>%
ggplot(aes(Date, n, color = type)) +
geom_line(size = 1) +
labs(title = "Time Series of Bathroom Type",
subtitle = "by % of Success or Accident") +
theme_fivethirtyeight()
test_by_acc <- test %>%
group_by(Date) %>%
summarise(p_value = t.test(Success == 1, Success == 0)$p.value,
Accident = t.test(Success == 1, Success == 0)$estimate[2])
View(test_by_acc)
View(test_by_test)
effect <- inner_join(test_by_day, test_by_acc, by = "Date")
View(effect)
test_by_acc <- test %>%
group_by(Date) %>%
summarise(Accident = t.test(Success == 1, Success == 0)$estimate[2])
effect <- inner_join(test_by_day, test_by_acc, by = "Date") %>%
mutate(effect = sum(Success - Accident))
effect <- inner_join(test_by_day, test_by_acc, by = "Date") %>%
mutate(effect = (Success - Accident))
effect %>%
ggplot(aes(Date, effect)) +
geom_line(size = 1) +
labs(title = "P-Value of Success by Day",
subtitle = "With 0.05 Threshold") +
theme_fivethirtyeight()
effect %>%
ggplot(aes(Date, effect)) +
geom_line(size = 1) +
labs(title = "Succes Effect Size by Day",
subtitle = "With 0.05 Threshold") +
theme_fivethirtyeight()
effect %>%
effect %>%
ggplot(aes(Date, effect)) +
geom_line(size = 1) +
labs(title = "Succes Effect Size by Day") +
theme_fivethirtyeight()
effect %>%
ggplot(aes(Date, effect)) +
geom_line(size = 1) +
labs(title = "Succes Effect Size by Day") +
theme_fivethirtyeight()
effect%>%
effect %>%
summarise(effect)
effect %>%
summarise(effect= sum(effect))
effect %>%
ggplot(aes(Date, effect)) +
geom_line(size = 1, color = "blue") +
labs(title = "Succes Effect Size by Day") +
theme_fivethirtyeight()
effect %>%
ggplot(aes(Date, effect)) +
geom_line(size = 1, color = "blue") +
labs(title = "Effect Size of Success by Day") +
theme_fivethirtyeight()
effect %>%
summarise(mean = mean(effect), total = sum(effect))
effect %>%
summarise(mean_effect = mean(effect), total_effect = sum(effect))
effect %>%
ggplot(aes(Date, effect)) +
geom_line(size = 1, color = "blue") +
labs(title = "Percent Change of Success by Day") +
theme_fivethirtyeight()
